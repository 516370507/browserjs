// hnAb89O5soI2VuVlgkPYHzUCUPFfWSKC9YacfA+FWM9KWyCHPmvEBsOe673NmooxLjR1PY9zkOykrC1xe27eAuX7MrtkxdBzGogL0/332lqUr/V83T4kRCmrTzOrMaeyX9AMV24b+J+d8G67z1egVOdU7xIsH7Qt8s/gdcrPJ07ijVCQY5raY7ebpc/GnWRAakGjyuLd+P/9D89m6fM3VAdPw3fIFpFMfZz9tLjlck8BNgodBfF5E/p9VZsuAIRuHkkSnsXJpqk+QNFTHjazS5Yiz8YXytmosVVSDHGlYwOH2/b9ssT5jhKR4G2+NnO1SxxmbPGD+VnT4hslxVLWiA==
/**
** Copyright (C) 2000-2014 Opera Software ASA.  All rights reserved.
**
** This file is part of the Opera web browser.
**
** This script patches sites to work better with Opera
** For more information see http://www.opera.com/docs/browserjs/
**
** If you have comments on these patches (for example if you are the webmaster
** and want to inform us about a fixed site that no longer needs patching)
** please report issues through the bug tracking system
** https://bugs.opera.com/
**
** DO NOT EDIT THIS FILE! It will not be used by Opera if edited.
**/
// Generic fixes (mostly)
(function(){
	if(location.href.indexOf('operabrowserjs=no')!=-1) {
		return;
	}
	var bjsversion = " Opera OPRMobile 15.0 core 1162.59591, June 17, 2014." +
					 " Active patches: 4 ";
	var navRestore = {}; // keep original navigator.* values
	var shouldRestore = false;

	var href = location.href;
	var pathname = location.pathname;
	var hostname = {
		value: location.hostname,
		toString: function() {
			return this.value;
		},
		valueOf: function() {
			return this.value;
		},
		indexOf: function(string) {
			return this.value.indexOf(string);
		},
		match: function(regex) {
			return this.value.match(regex);
		},
		contains: function(string) {
			return this.value.indexOf(string) > -1;
		},
		endsWith: function(suffix) {
			return this.value.indexOf(suffix, this.value.length - suffix.length) !== -1;
		}
	}

	/* We make references to the following functions to not get version that users
	have overwritten */
	var addEventListener = Window.prototype.addEventListener;
	var appendChild = Node.prototype.appendChild;
	var call = Function.prototype.call;
	var createElement = Document.prototype.createElement;
	var createTextNode = Document.prototype.createTextNode;
	var getElementsByTagName = Document.prototype.getElementsByTagName;
	var insertBefore = Node.prototype.insertBefore;
	var querySelector = Document.prototype.querySelector;
	var setAttribute = Element.prototype.setAttribute;
	var setTimeout = window.setTimeout;

	function log(str) {
		console.log("Opera has modified script or content on "
								+ hostname + " (" + str + "). See browser.js for details");
	}


	// Utility functions


	// ANDMO-1210, Replace Youtube embeds with image and link on Android devices with no plugins.

	document.addEventListener("DOMContentLoaded", function (e) {
		if( ( navigator.platform == "Android" || navigator.platform.indexOf("Linux armv") == 0 ) && !navigator.plugins.length ){
			var xpath = '//object[starts-with(@data,"http://www.youtube.com/v/")] | //object//param[starts-with(@name,"src") and starts-with(@value,"http://www.youtube.com/v/")] | //embed[starts-with(@src,"http://www.youtube.com/v/")] | //object[starts-with(@data,"https://www.youtube.com/v/")] | //object//param[starts-with(@name,"src") and starts-with(@value,"https://www.youtube.com/v/")] | //embed[starts-with(@src,"https://www.youtube.com/v/")]';
			var nodes = document.evaluate(xpath, document, null, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE,null);
			for ( var i = nodes.snapshotLength-1; i >= 0 ; i-- ) {	
				var id;
				var element = nodes.snapshotItem(i);
				var uri = document.createElement('a');
				uri.href = (element.src) ? element.src : (element.data) ? element.data : (element.value) ? element.value : "";
				id = (uri.pathname.match(/embed\//)) ?  uri.pathname.split(/embed\//)[1] : uri.pathname.split(/v\//)[1];		
				id = id.split(/&/)[0];
				var VidUrl = document.createElement('a');
				VidUrl.href = "vnd.youtube:" + id;
				var ThumbImage= document.createElement('img');
				ThumbImage.src = "http://img.youtube.com/vi/"+id+"/1.jpg";
				ThumbImage.width = (element.width) ? element.width : element.parentNode.width;
				ThumbImage.height = (element.height) ? element.height : element.parentNode.height;	
				VidUrl.appendChild(ThumbImage);
				element.parentNode.replaceChild(VidUrl, element);
			}
		 }
	}, false);


	if(hostname.contains('www.bing.')){
		window.addEventListener('resize',function(){
			var ev = new CustomEvent('orientationchange');
			window.dispatchEvent(ev);
		},false);
		log('PATCH-1153, Bing - fix viewport after rotation');
	} else if(hostname.indexOf('.google.')>-1){
		Object.defineProperty(window, "_", {
			get: function(){return this.__uderscore__},
			set: function(arg) {
				for(var i=65;i<=122;i++) { //iterate over A-z
					if(i>90 && i<97) continue; // skip characters between Z and a: [\]^_`
					(function(index){
						var propertyName = String.fromCharCode(index)+'b';
						if(!arg.hasOwnProperty(propertyName)) {
							Object.defineProperty(arg, propertyName, {
								get: function(){return this['__'+propertyName+'__']},
								set: function(arg) {
									if(String(arg).match(/function \(\){return\(0,_\.(.*)\)\("Opera"\)\|\|\(0,_\.\1\)\("OPR"\)}/))
										arg=function(){return false};
									this['__'+propertyName+'__'] = arg;
								}
							});
						};
					})(i);
				}
			this.__uderscore__ = arg;
			}
		});
		
		log('PATCH-1178, Google sniffing gone bad - iterate over [A-z]b');
	} else if(hostname.indexOf('opera.com')>-1&& pathname.indexOf('/docs/browserjs/')==0){
		document.addEventListener('DOMContentLoaded',function(){
			var browserjs_active = document.getElementById('browserjs_active');
			var browserjs_status_message = document.getElementById('browserjs_status_message');
			if(browserjs_active && browserjs_active.getElementsByTagName('span').length>0){
				browserjs_active.style.display='';
				browserjs_active.getElementsByTagName('span')[0].appendChild(document.createTextNode(bjsversion));
				if(browserjs_status_message){
					browserjs_status_message.style.display='none';
				}
			}
		}, false);
		log('1, Browser.js status and version reported on browser.js documentation page');
	}

})();
